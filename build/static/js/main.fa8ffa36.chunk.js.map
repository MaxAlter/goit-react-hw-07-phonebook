{"version":3,"sources":["components/ContactForm/PhoneBook.module.css","components/filter/Filter.module.css","components/ContactList/list.module.css","transition/styles.module.css","components/AlertComponent/alertContact.module.css","components/ContactList/ContactList.module.css","transition/slide.module.css","transition/filter.module.css","transition/logo.module.css","components/PhoneBook/logo.module.css","Redux/reducers/filterReducer/filterActions.js","Redux/reducers/Selectors/contactSelectors.js","Redux/reducers/contactReducer/contactsActions.js","Redux/reducers/contactReducer/contactsOperators.js","Api/apiAxios.js","components/AlertComponent/AlertContact.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFomContainer.js","components/ContactList/list.js","components/ContactList/ListContainer.js","components/ContactList/ContactListItem.js","components/ContactList/contactList.js","containers/VisibleContacts.js","components/filter/filter.js","components/PhoneBook/PhoneBook.js","App/App.js","App/AppContainers.js","Redux/reducers/contactReducer/contactsReducer.js","Redux/reducers/filterReducer/filterReducer.js","Redux/store.js","index.js"],"names":["module","exports","Type","onContact","state","contacts","ActionType","fetchSuccess","type","fetchError","fetchContacts","dispatch","axios","get","then","data","payload","setAllContacts","catch","error","deleteContact","id","delete","deletContacts","removeContact","postContacts","newContact","post","addContacts","AlertContact","isActiv","CSSTransition","in","classNames","styles","timeout","mountOnEnter","unmountOnExit","className","st","alert","ContactForm","name","number","userId","shortid","generate","handleChange","e","target","value","setState","handleSubmit","preventDefault","nameValid","setTimeout","props","find","item","this","style","contactForm","onSubmit","contactForm_label","htmlFor","contactForm_input","onChange","autoComplete","contactForm_button","Component","connect","contact","List","list","button","onClick","ContactListItems","slideStyle","key","ContactList","length","contactList","map","ContactListItem","getVisibylitiContacts","filterName","filter","toLowerCase","includes","Filter","onChangeFilter","filterStyle","formFilter","formName_label","formName_input","placeholder","PhoneBookLogo","title","logo","s","App","handleFIlter","filterContact","TransitionGroup","component","onHandleForm","handleForm","items","onDeleteList","deleteList","text","defaultState","contactReducer","action","filterReducer","rootReducer","combineReducers","contactsReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fa8ffa36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"PhoneBook_contactForm__14CbJ\",\"contactForm_label\":\"PhoneBook_contactForm_label__2u7Na\",\"contactForm_input\":\"PhoneBook_contactForm_input__1xJP7\",\"contactForm_button\":\"PhoneBook_contactForm_button__2JBEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFilter\":\"Filter_formFilter__2IG1u\",\"formName_label\":\"Filter_formName_label__1dCKM\",\"formName_input\":\"Filter_formName_input__25PT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__2qP0W\",\"button\":\"list_button__1weKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"styles_enter__1Lvx7\",\"enterActive\":\"styles_enterActive__dMlhZ\",\"exit\":\"styles_exit__3eqlq\",\"exitActive\":\"styles_exitActive__2HRuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alertContact_alert__D13FX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3XXpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3Y2Om\",\"enterActive\":\"slide_enterActive__1r9Lh\",\"exit\":\"slide_exit__Pw3Sp\",\"exitActive\":\"slide_exitActive__3K6Nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__3V2_j\",\"enterActive\":\"filter_enterActive__IB8AV\",\"exit\":\"filter_exit__UN-3c\",\"exitActive\":\"filter_exitActive__bHo3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logo_enter__1bMmf\",\"enterActive\":\"logo_enterActive__30j_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"logo_title__28GQJ\"};","export const Type = {\r\n  SET_VISIBILITY_FILTER: \"SET_VISIBILITY_FILTER\",\r\n};\r\n\r\nexport const filterContact = (value) => ({\r\n  type: Type.SET_VISIBILITY_FILTER,\r\n  payload: value,\r\n});\r\n","\r\nexport const onContact = (state) => state.contacts.contacts;\r\n","export const ActionType = {\r\n  SET_ALL_CONTACTS: \"contacts/setAllContacts\",\r\n  POST_NEW_CONTACT: \"contacts/postNewContact\",\r\n  DELETE_CONTACTS: \"contacts/deleteContact\",\r\n  FETCH_SUCCESS: \"contacts/fetchSuccess\",\r\n  FETCH_ERROR: \"contacts/fetchError\",\r\n};\r\n\r\nexport const fetchSuccess = () => ({\r\n  type: ActionType.FETCH_SUCCESS,\r\n});\r\n\r\nexport const fetchError = () => ({\r\n  type: ActionType.FETCH_ERROR,\r\n});\r\n\r\nexport const setAllContacts = (data) => ({\r\n  type: ActionType.SET_ALL_CONTACTS,\r\n  payload: data,\r\n});\r\n\r\nexport const postNewContact = (contact) => ({\r\n  type: ActionType.POST_NEW_CONTACT,\r\n  payload: contact,\r\n});\r\n\r\nexport const removeContact = (id) => ({\r\n  type: ActionType.DELETE_CONTACTS,\r\n  payload: id,\r\n});\r\n","import {\r\n  fetchSuccess,\r\n  fetchError,\r\n  setAllContacts,\r\n  removeContact,\r\n  postNewContact,\r\n} from \"../../reducers/contactReducer/contactsActions\";\r\n\r\nimport { getContacts, addContacts, deletContacts } from \"../../../Api/apiAxios\";\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  getContacts()\r\n    .then((data) => {\r\n      dispatch(fetchSuccess());\r\n      dispatch(setAllContacts(data));\r\n    })\r\n    .catch((error) => dispatch(fetchError(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  deletContacts(id)\r\n    .then((data) => {\r\n      dispatch(fetchSuccess());\r\n      dispatch(removeContact(id));\r\n    })\r\n    .catch((error) => dispatch(fetchError(error)));\r\n};\r\n\r\nexport const postContacts = (newContact) => (dispatch) => {\r\n  addContacts(newContact)\r\n    .then((data) => {\r\n      dispatch(fetchSuccess());\r\n      dispatch(postNewContact(newContact));\r\n    })\r\n    .catch((error) => dispatch(fetchError(error)));\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const getContacts = () =>\r\n  axios.get(\"http://localhost:3333/contacts\").then(({ data }) => data);\r\n\r\nexport const addContacts = (newContact) =>\r\n  axios\r\n    .post(\"http://localhost:3333/contacts\", newContact)\r\n    .then(({ data }) => data);\r\n\r\nexport const deletContacts = (id) =>\r\n  axios.delete(`http://localhost:3333/contacts/${id}`);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../transition/styles.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport st from \"./alertContact.module.css\";\r\n\r\nconst AlertContact = ({ isActiv = false }) => (\r\n  <CSSTransition\r\n    in={isActiv}\r\n    classNames={styles}\r\n    timeout={250}\r\n    mountOnEnter\r\n    unmountOnExit\r\n  >\r\n    <div className={st.alert}>contact already exists</div>\r\n  </CSSTransition>\r\n);\r\n\r\nAlertContact.propTypes = {\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nexport default AlertContact;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport style from \"./PhoneBook.module.css\";\r\nimport AlertContact from \"../AlertComponent/AlertContact\";\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    error: false,\r\n  };\r\n\r\n  userId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.nameValid()) {\r\n      this.setState({ error: true });\r\n      setTimeout(() => this.setState({ error: false }), 2000);\r\n    } else {\r\n\r\n      this.props.postContacts({ ...this.state, id: shortid.generate() });\r\n    }\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  nameValid = () => {\r\n    const notValid = this.props.contacts.find(\r\n      (item) => item.name === this.state.name\r\n    );\r\n    return notValid;\r\n  };\r\n\r\n  render() {\r\n    const { name, number, error } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <AlertContact isActiv={error} />\r\n\r\n        <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Name\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.userId}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label className={style.contactForm_label} htmlFor={this.userId}>\r\n            Number\r\n            <input\r\n              className={style.contactForm_input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button className={style.contactForm_button} type=\"submit\">\r\n            Add contacts\r\n          </button>\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { connect } from \"react-redux\";\r\nimport { postContacts } from \"../../Redux/reducers/contactReducer/contactsOperators\";\r\nimport { onContact } from \"../../Redux/reducers/Selectors/contactSelectors\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nconst MSTP = (state) => ({\r\n  contacts: onContact(state),\r\n});\r\n\r\nconst MDTP = (dispatch) => ({\r\n  postContacts: (contact) => dispatch(postContacts(contact)),\r\n});\r\n\r\nexport default connect(MSTP, MDTP)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./list.module.css\";\r\n\r\nclass List extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  };\r\n\r\n  \r\n\r\n  deleteContact = () => {\r\n    this.props.deleteContact(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    const { number, name } = this.props;\r\n    return (\r\n      <>\r\n        <div className={style.list}>\r\n          {number} : {name}\r\n          <button\r\n            className={style.button}\r\n            type=\"button\"\r\n            onClick={this.deleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../Redux/reducers/contactReducer/contactsOperators\";\r\nimport List from \"./list\";\r\n\r\nconst MDTP = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, MDTP)(List);\r\n","import React from \"react\";\r\nimport List from \"./ListContainer\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideStyle from \"../../transition/slide.module.css\";\r\n\r\nconst ContactListItems = ({ item }) => (\r\n  <>\r\n    <CSSTransition\r\n      in\r\n      timeout={250}\r\n      classNames={slideStyle}\r\n      key={item.id}\r\n      unmountOnExit\r\n    >\r\n      <li>\r\n        <List {...item} />\r\n      </li>\r\n    </CSSTransition>\r\n  </>\r\n);\r\n\r\nexport default ContactListItems;\r\n","import React, { Component } from \"react\";\r\nimport style from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.contacts.length > 0 && (\r\n          <ul className={style.contactList}>\r\n            {this.props.contacts.map((item) => (\r\n              <ContactListItem item={item} key={item.id} />\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport ContactList from \"../components/ContactList/contactList\";\r\nimport { fetchContacts } from \"../Redux/reducers/contactReducer/contactsOperators\";\r\n\r\nconst getVisibylitiContacts = (contacts, filterName) => {\r\n  return filterName\r\n    ? contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filterName.toLowerCase())\r\n      )\r\n    : contacts;\r\n};\r\n\r\nconst MSTP = ({ contacts, filter }) => ({\r\n  contacts: getVisibylitiContacts(contacts.contacts, filter),\r\n});\r\n\r\nconst MDTP = (dispatch) => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(MSTP, MDTP)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport filterStyle from \"../../transition/filter.module.css\";\r\n\r\nconst Filter = ({ onChangeFilter }) => {\r\n  return (\r\n    <CSSTransition in timeout={250} classNames={filterStyle} unmountOnExit>\r\n      <form className={style.formFilter}>\r\n        <label className={style.formName_label}>Find Contacts by Name</label>\r\n        <input\r\n          className={style.formName_input}\r\n          type=\"text\"\r\n          onChange={onChangeFilter}\r\n          placeholder=\"Type to filter contacts...\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </form>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport logo from \"../../transition/logo.module.css\";\r\nimport s from \"./logo.module.css\";\r\n\r\nexport default class PhoneBookLogo extends Component {\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    isActiv: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.setState({ isActiv: true }), 300);\r\n  }\r\n\r\n  render() {\r\n    const { isActiv } = this.state;\r\n    const { title } = this.props;\r\n    return (\r\n      <CSSTransition in={isActiv} classNames={logo} timeout={500}>\r\n        <div className={s.title}>{title}</div>\r\n      </CSSTransition>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\n\nimport ContactForm from \"../components/ContactForm/ContactFomContainer\";\nimport VisibleContactList from \"../containers/VisibleContacts\";\nimport Filter from \"../components/filter/filter\";\nimport PhoneBook from \"../components/PhoneBook/PhoneBook\";\n\nclass App extends Component {\n  handleFIlter = (e) => {\n    this.props.filterContact(e.target.value);\n  };\n\n  render() {\n    return (\n      <TransitionGroup component={null}>\n        <>\n          <PhoneBook title=\"PhoneBook\" />\n          <ContactForm onHandleForm={this.handleForm} />\n          <h2>Contacts</h2>\n          {this.props.contacts.length >= 2 && (\n            <Filter onChangeFilter={this.handleFIlter} />\n          )}\n          <VisibleContactList\n            items={this.props.filterContact}\n            onDeleteList={this.deleteList}\n          />\n        </>\n      </TransitionGroup>\n    );\n  }\n}\n\n\nexport default App;\n","import { connect } from \"react-redux\";\r\nimport { filterContact } from \"../Redux/reducers/filterReducer/filterActions\";\r\nimport { onContact } from \"../Redux/reducers/Selectors/contactSelectors\";\r\nimport App from \"./App\";\r\n\r\nconst MSTP = (state) => ({\r\n  contacts: onContact(state),\r\n});\r\n\r\nconst MDTP = (dispatch) => ({\r\n  filterContact: (text) => dispatch(filterContact(text)),\r\n});\r\n\r\nexport default connect(MSTP, MDTP)(App);\r\n","\r\nimport { ActionType } from \"../../reducers/contactReducer/contactsActions\";\r\n\r\nconst defaultState = {\r\n  contacts: [],\r\n  error: \"\",\r\n};\r\n\r\nconst contactReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ActionType.POST_NEW_CONTACT:\r\n      return { ...state, contacts: [...state.contacts, action.payload] };\r\n\r\n    case ActionType.DELETE_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case ActionType.FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n    case ActionType.SET_ALL_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n      };\r\n    case ActionType.FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \" UPS ERROR\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contactReducer;\r\n","import { Type } from \"./filterActions\";\r\n\r\nconst defaultState = \"\";\r\n\r\nconst filterReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case Type.SET_VISIBILITY_FILTER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./reducers/contactReducer/contactsReducer\";\r\nimport filterReducer from \"./reducers/filterReducer/filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...getDefaultMiddleware()],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/AppContainers\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}